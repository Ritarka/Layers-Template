// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module layer_top_layer3_Pipeline_VITIS_LOOP_137_1_VITIS_LOOP_139_2_VITIS_LOOP_141_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_fm_AWVALID,
        m_axi_fm_AWREADY,
        m_axi_fm_AWADDR,
        m_axi_fm_AWID,
        m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT,
        m_axi_fm_AWQOS,
        m_axi_fm_AWREGION,
        m_axi_fm_AWUSER,
        m_axi_fm_WVALID,
        m_axi_fm_WREADY,
        m_axi_fm_WDATA,
        m_axi_fm_WSTRB,
        m_axi_fm_WLAST,
        m_axi_fm_WID,
        m_axi_fm_WUSER,
        m_axi_fm_ARVALID,
        m_axi_fm_ARREADY,
        m_axi_fm_ARADDR,
        m_axi_fm_ARID,
        m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT,
        m_axi_fm_ARQOS,
        m_axi_fm_ARREGION,
        m_axi_fm_ARUSER,
        m_axi_fm_RVALID,
        m_axi_fm_RREADY,
        m_axi_fm_RDATA,
        m_axi_fm_RLAST,
        m_axi_fm_RID,
        m_axi_fm_RFIFONUM,
        m_axi_fm_RUSER,
        m_axi_fm_RRESP,
        m_axi_fm_BVALID,
        m_axi_fm_BREADY,
        m_axi_fm_BRESP,
        m_axi_fm_BID,
        m_axi_fm_BUSER,
        output_feature_map,
        sext_ln137
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_fm_AWVALID;
input   m_axi_fm_AWREADY;
output  [63:0] m_axi_fm_AWADDR;
output  [0:0] m_axi_fm_AWID;
output  [31:0] m_axi_fm_AWLEN;
output  [2:0] m_axi_fm_AWSIZE;
output  [1:0] m_axi_fm_AWBURST;
output  [1:0] m_axi_fm_AWLOCK;
output  [3:0] m_axi_fm_AWCACHE;
output  [2:0] m_axi_fm_AWPROT;
output  [3:0] m_axi_fm_AWQOS;
output  [3:0] m_axi_fm_AWREGION;
output  [0:0] m_axi_fm_AWUSER;
output   m_axi_fm_WVALID;
input   m_axi_fm_WREADY;
output  [15:0] m_axi_fm_WDATA;
output  [1:0] m_axi_fm_WSTRB;
output   m_axi_fm_WLAST;
output  [0:0] m_axi_fm_WID;
output  [0:0] m_axi_fm_WUSER;
output   m_axi_fm_ARVALID;
input   m_axi_fm_ARREADY;
output  [63:0] m_axi_fm_ARADDR;
output  [0:0] m_axi_fm_ARID;
output  [31:0] m_axi_fm_ARLEN;
output  [2:0] m_axi_fm_ARSIZE;
output  [1:0] m_axi_fm_ARBURST;
output  [1:0] m_axi_fm_ARLOCK;
output  [3:0] m_axi_fm_ARCACHE;
output  [2:0] m_axi_fm_ARPROT;
output  [3:0] m_axi_fm_ARQOS;
output  [3:0] m_axi_fm_ARREGION;
output  [0:0] m_axi_fm_ARUSER;
input   m_axi_fm_RVALID;
output   m_axi_fm_RREADY;
input  [15:0] m_axi_fm_RDATA;
input   m_axi_fm_RLAST;
input  [0:0] m_axi_fm_RID;
input  [9:0] m_axi_fm_RFIFONUM;
input  [0:0] m_axi_fm_RUSER;
input  [1:0] m_axi_fm_RRESP;
input   m_axi_fm_BVALID;
output   m_axi_fm_BREADY;
input  [1:0] m_axi_fm_BRESP;
input  [0:0] m_axi_fm_BID;
input  [0:0] m_axi_fm_BUSER;
input  [63:0] output_feature_map;
input  [62:0] sext_ln137;

reg ap_idle;
reg m_axi_fm_AWVALID;
reg[63:0] m_axi_fm_AWADDR;
reg m_axi_fm_WVALID;
reg[15:0] m_axi_fm_WDATA;
reg m_axi_fm_ARVALID;
reg[63:0] m_axi_fm_ARADDR;
reg m_axi_fm_RREADY;
reg m_axi_fm_BREADY;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
reg    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
reg   [0:0] icmp_ln144_reg_1143;
reg   [0:0] icmp_ln144_reg_1143_pp0_iter8_reg;
reg   [0:0] and_ln144_2_reg_1197;
reg    ap_predicate_op192_writereq_state18;
reg    ap_block_state18_io;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
reg   [0:0] icmp_ln144_reg_1143_pp0_iter11_reg;
reg   [0:0] and_ln144_2_reg_1197_pp0_iter11_reg;
reg    ap_predicate_op209_writeresp_state24;
reg    ap_block_state24_pp0_stage1_iter11;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln137_fu_306_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fm_blk_n_AR;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln137_reg_1063;
reg    fm_blk_n_R;
reg    fm_blk_n_AW;
reg    fm_blk_n_W;
wire    ap_block_pp0_stage1;
reg    fm_blk_n_B;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
reg    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
reg    ap_predicate_op194_write_state19;
reg    ap_block_state19_io;
wire    ap_block_state21_pp0_stage0_iter10;
reg    ap_block_state23_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_11001;
wire  signed [63:0] sext_ln137_cast_fu_252_p1;
reg  signed [63:0] sext_ln137_cast_reg_1042;
reg   [6:0] i_1_reg_1047;
reg    ap_block_pp0_stage1_11001;
reg   [6:0] i_1_reg_1047_pp0_iter1_reg;
reg   [14:0] indvar_flatten338_load_reg_1053;
reg   [22:0] indvar_flatten371_load_reg_1058;
reg   [0:0] icmp_ln137_reg_1063_pp0_iter1_reg;
wire   [0:0] icmp_ln139_fu_324_p2;
reg   [0:0] icmp_ln139_reg_1067;
reg   [0:0] icmp_ln139_reg_1067_pp0_iter1_reg;
wire   [6:0] select_ln137_fu_330_p3;
reg   [6:0] select_ln137_reg_1074;
wire   [9:0] select_ln137_1_fu_338_p3;
reg   [9:0] select_ln137_1_reg_1079;
wire   [0:0] and_ln137_fu_392_p2;
reg   [0:0] and_ln137_reg_1089;
reg   [0:0] and_ln137_reg_1089_pp0_iter1_reg;
wire   [6:0] add_ln139_fu_398_p2;
reg   [6:0] add_ln139_reg_1096;
reg   [6:0] add_ln139_reg_1096_pp0_iter1_reg;
wire   [7:0] select_ln139_fu_410_p3;
reg   [7:0] select_ln139_reg_1103;
reg   [7:0] select_ln139_reg_1103_pp0_iter1_reg;
reg   [63:0] fm_addr_reg_1109;
reg   [63:0] fm_addr_reg_1109_pp0_iter1_reg;
reg   [63:0] fm_addr_reg_1109_pp0_iter2_reg;
reg   [63:0] fm_addr_reg_1109_pp0_iter3_reg;
reg   [63:0] fm_addr_reg_1109_pp0_iter4_reg;
reg   [63:0] fm_addr_reg_1109_pp0_iter5_reg;
reg   [63:0] fm_addr_reg_1109_pp0_iter6_reg;
reg   [63:0] fm_addr_reg_1109_pp0_iter7_reg;
reg   [63:0] fm_addr_1_reg_1122;
reg   [15:0] fm_addr_read_reg_1128;
reg   [15:0] fm_addr_read_reg_1128_pp0_iter6_reg;
reg   [15:0] fm_addr_1_read_reg_1133;
wire   [15:0] add_ln143_5_fu_657_p2;
reg   [15:0] add_ln143_5_reg_1138;
reg   [15:0] add_ln143_5_reg_1138_pp0_iter8_reg;
wire   [0:0] icmp_ln144_fu_661_p2;
reg   [0:0] icmp_ln144_reg_1143_pp0_iter9_reg;
reg   [0:0] icmp_ln144_reg_1143_pp0_iter10_reg;
wire   [0:0] tmp_fu_667_p3;
reg   [0:0] tmp_reg_1147;
wire   [1:0] or_ln_fu_829_p3;
reg   [1:0] or_ln_reg_1152;
wire   [63:0] zext_ln144_fu_837_p1;
reg   [63:0] zext_ln144_reg_1157;
wire   [0:0] icmp_ln144_3_fu_841_p2;
reg   [0:0] icmp_ln144_3_reg_1162;
wire   [63:0] lshr_ln144_fu_857_p2;
reg   [63:0] lshr_ln144_reg_1167;
wire   [31:0] sub_ln144_2_fu_863_p2;
reg   [31:0] sub_ln144_2_reg_1172;
wire   [10:0] trunc_ln144_2_fu_869_p1;
reg   [10:0] trunc_ln144_2_reg_1177;
wire   [0:0] icmp_ln144_4_fu_971_p2;
reg   [0:0] icmp_ln144_4_reg_1187;
wire   [0:0] icmp_ln144_5_fu_977_p2;
reg   [0:0] icmp_ln144_5_reg_1192;
wire   [0:0] and_ln144_2_fu_987_p2;
reg   [0:0] and_ln144_2_reg_1197_pp0_iter9_reg;
reg   [0:0] and_ln144_2_reg_1197_pp0_iter10_reg;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter2_stage0;
wire  signed [63:0] sext_ln143_fu_503_p1;
wire   [63:0] add_ln143_4_fu_645_p2;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] j_fu_172;
wire   [7:0] add_ln141_fu_523_p2;
wire    ap_loop_init;
reg   [6:0] i_fu_176;
wire   [6:0] select_ln139_5_fu_518_p3;
reg   [14:0] indvar_flatten338_fu_180;
wire   [14:0] select_ln139_6_fu_533_p3;
reg   [9:0] k_fu_184;
reg   [22:0] indvar_flatten371_fu_188;
wire   [22:0] add_ln137_1_fu_513_p2;
wire   [63:0] grp_fu_247_p0;
wire   [9:0] add_ln137_fu_318_p2;
wire   [9:0] mul_ln137_1_fu_354_p0;
wire   [15:0] mul_ln137_1_fu_354_p1;
wire   [24:0] mul_ln137_1_fu_354_p2;
wire   [14:0] shl_ln1_fu_290_p3;
wire   [12:0] shl_ln143_1_fu_298_p3;
wire   [0:0] icmp_ln141_fu_386_p2;
wire   [0:0] xor_ln137_fu_380_p2;
wire   [0:0] or_ln139_fu_404_p2;
wire   [14:0] shl_ln143_mid1_fu_418_p3;
wire   [14:0] select_ln137_4_fu_364_p3;
wire   [12:0] shl_ln143_1_mid1_fu_434_p3;
wire   [12:0] select_ln137_5_fu_372_p3;
wire   [12:0] select_ln139_4_fu_442_p3;
wire   [8:0] shl_ln143_2_fu_454_p3;
wire   [63:0] zext_ln137_2_fu_360_p1;
wire   [14:0] select_ln139_3_fu_426_p3;
wire   [14:0] zext_ln143_1_fu_462_p1;
wire   [14:0] add_ln143_1_fu_471_p2;
wire   [14:0] select_ln139_4_cast_fu_450_p1;
wire   [14:0] add_ln143_3_fu_477_p2;
wire   [63:0] zext_ln143_2_fu_483_p1;
wire   [63:0] add_ln143_fu_466_p2;
wire   [63:0] add_ln143_2_fu_487_p2;
wire   [62:0] trunc_ln7_fu_493_p4;
wire   [14:0] add_ln139_1_fu_528_p2;
wire   [11:0] shl_ln141_1_fu_564_p3;
wire   [11:0] shl_ln141_1_mid1_fu_578_p3;
wire   [11:0] select_ln137_3_fu_571_p3;
wire   [11:0] select_ln139_2_fu_585_p3;
wire   [13:0] shl_ln_fu_596_p3;
wire   [13:0] shl_ln141_mid1_fu_610_p3;
wire   [13:0] select_ln137_2_fu_603_p3;
wire   [13:0] select_ln139_1_fu_617_p3;
wire   [22:0] grp_fu_993_p3;
wire   [63:0] j_cast11_fu_628_p1;
wire   [63:0] add_ln143_7_fu_634_p2;
wire   [63:0] zext_ln141_fu_624_p1;
wire   [63:0] add_ln143_8_fu_639_p2;
wire   [63:0] zext_ln143_3_fu_631_p1;
wire   [15:0] sub_ln144_fu_675_p2;
wire   [15:0] select_ln144_fu_681_p3;
reg   [15:0] tmp_1_fu_689_p4;
wire   [16:0] tmp_2_fu_699_p3;
wire  signed [31:0] sext_ln144_fu_707_p1;
reg   [31:0] tmp_3_fu_711_p3;
wire   [31:0] sub_ln144_1_fu_719_p2;
wire   [31:0] add_ln144_fu_729_p2;
wire   [30:0] tmp_4_fu_735_p4;
wire   [3:0] trunc_ln144_1_fu_751_p1;
wire   [3:0] sub_ln144_4_fu_755_p2;
wire   [15:0] zext_ln144_5_fu_761_p1;
wire   [15:0] lshr_ln144_2_fu_765_p2;
wire   [15:0] and_ln144_3_fu_771_p2;
wire   [0:0] icmp_ln144_1_fu_745_p2;
wire   [0:0] icmp_ln144_2_fu_777_p2;
wire   [0:0] tmp_7_fu_789_p3;
wire   [15:0] trunc_ln144_fu_725_p1;
wire   [15:0] add_ln144_1_fu_803_p2;
wire   [0:0] bit_select30_i_i_i_fu_809_p3;
wire   [0:0] xor_ln144_fu_797_p2;
wire   [0:0] and_ln144_1_fu_817_p2;
wire   [0:0] and_ln144_fu_783_p2;
wire   [0:0] or_ln144_fu_823_p2;
wire   [31:0] add_ln144_2_fu_847_p2;
wire   [63:0] zext_ln144_1_fu_853_p1;
wire   [63:0] zext_ln144_2_fu_873_p1;
wire   [63:0] shl_ln144_fu_876_p2;
wire   [63:0] select_ln144_1_fu_881_p3;
wire   [63:0] zext_ln144_3_fu_887_p1;
wire   [63:0] add_ln144_3_fu_890_p2;
wire   [62:0] lshr_ln144_1_fu_896_p4;
wire   [0:0] tmp_8_fu_910_p3;
wire   [10:0] sub_ln144_3_fu_926_p2;
wire   [10:0] select_ln144_2_fu_918_p3;
wire   [10:0] add_ln144_4_fu_931_p2;
wire   [63:0] zext_ln144_4_fu_906_p1;
wire   [11:0] tmp_6_fu_937_p3;
wire   [63:0] LD_fu_944_p5;
wire   [51:0] trunc_ln144_3_fu_961_p4;
wire   [0:0] or_ln144_1_fu_983_p2;
wire   [0:0] grp_fu_247_p2;
wire   [9:0] grp_fu_993_p0;
wire   [13:0] grp_fu_993_p1;
wire   [11:0] grp_fu_993_p2;
reg    grp_fu_247_ce;
reg    ap_block_pp0_stage1_00001;
reg    grp_fu_993_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to11;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [22:0] grp_fu_993_p00;
wire   [22:0] grp_fu_993_p20;
wire   [24:0] mul_ln137_1_fu_354_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

layer_top_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U2616(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_247_p0),
    .din1(64'd0),
    .ce(grp_fu_247_ce),
    .opcode(5'd4),
    .dout(grp_fu_247_p2)
);

layer_top_mul_10ns_16ns_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_10ns_16ns_25_1_1_U2617(
    .din0(mul_ln137_1_fu_354_p0),
    .din1(mul_ln137_1_fu_354_p1),
    .dout(mul_ln137_1_fu_354_p2)
);

layer_top_mac_muladd_10ns_14ns_12ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 23 ))
mac_muladd_10ns_14ns_12ns_23_4_1_U2618(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_993_p0),
    .din1(grp_fu_993_p1),
    .din2(grp_fu_993_p2),
    .ce(grp_fu_993_ce),
    .dout(grp_fu_993_p3)
);

layer_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_176 <= 7'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_1063 == 1'd0))) begin
            i_fu_176 <= select_ln139_5_fu_518_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten338_fu_180 <= 15'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_1063 == 1'd0))) begin
            indvar_flatten338_fu_180 <= select_ln139_6_fu_533_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten371_fu_188 <= 23'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_1063 == 1'd0))) begin
            indvar_flatten371_fu_188 <= add_ln137_1_fu_513_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_172 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_1063 == 1'd0))) begin
            j_fu_172 <= add_ln141_fu_523_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_184 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_1063 == 1'd0))) begin
            k_fu_184 <= select_ln137_1_reg_1079;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln137_fu_306_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln139_reg_1096 <= add_ln139_fu_398_p2;
        and_ln137_reg_1089 <= and_ln137_fu_392_p2;
        fm_addr_reg_1109 <= sext_ln143_fu_503_p1;
        icmp_ln139_reg_1067 <= icmp_ln139_fu_324_p2;
        select_ln137_1_reg_1079 <= select_ln137_1_fu_338_p3;
        select_ln137_reg_1074 <= select_ln137_fu_330_p3;
        select_ln139_reg_1103 <= select_ln139_fu_410_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln139_reg_1096_pp0_iter1_reg <= add_ln139_reg_1096;
        and_ln137_reg_1089_pp0_iter1_reg <= and_ln137_reg_1089;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        fm_addr_1_read_reg_1133 <= m_axi_fm_RDATA;
        fm_addr_reg_1109_pp0_iter1_reg <= fm_addr_reg_1109;
        fm_addr_reg_1109_pp0_iter2_reg <= fm_addr_reg_1109_pp0_iter1_reg;
        fm_addr_reg_1109_pp0_iter3_reg <= fm_addr_reg_1109_pp0_iter2_reg;
        fm_addr_reg_1109_pp0_iter4_reg <= fm_addr_reg_1109_pp0_iter3_reg;
        fm_addr_reg_1109_pp0_iter5_reg <= fm_addr_reg_1109_pp0_iter4_reg;
        fm_addr_reg_1109_pp0_iter6_reg <= fm_addr_reg_1109_pp0_iter5_reg;
        fm_addr_reg_1109_pp0_iter7_reg <= fm_addr_reg_1109_pp0_iter6_reg;
        i_1_reg_1047 <= i_fu_176;
        i_1_reg_1047_pp0_iter1_reg <= i_1_reg_1047;
        icmp_ln137_reg_1063 <= icmp_ln137_fu_306_p2;
        icmp_ln137_reg_1063_pp0_iter1_reg <= icmp_ln137_reg_1063;
        icmp_ln139_reg_1067_pp0_iter1_reg <= icmp_ln139_reg_1067;
        indvar_flatten338_load_reg_1053 <= indvar_flatten338_fu_180;
        indvar_flatten371_load_reg_1058 <= indvar_flatten371_fu_188;
        select_ln139_reg_1103_pp0_iter1_reg <= select_ln139_reg_1103;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln143_5_reg_1138 <= add_ln143_5_fu_657_p2;
        add_ln143_5_reg_1138_pp0_iter8_reg <= add_ln143_5_reg_1138;
        and_ln144_2_reg_1197_pp0_iter10_reg <= and_ln144_2_reg_1197_pp0_iter9_reg;
        and_ln144_2_reg_1197_pp0_iter11_reg <= and_ln144_2_reg_1197_pp0_iter10_reg;
        and_ln144_2_reg_1197_pp0_iter9_reg <= and_ln144_2_reg_1197;
        fm_addr_read_reg_1128 <= m_axi_fm_RDATA;
        fm_addr_read_reg_1128_pp0_iter6_reg <= fm_addr_read_reg_1128;
        icmp_ln144_reg_1143 <= icmp_ln144_fu_661_p2;
        icmp_ln144_reg_1143_pp0_iter10_reg <= icmp_ln144_reg_1143_pp0_iter9_reg;
        icmp_ln144_reg_1143_pp0_iter11_reg <= icmp_ln144_reg_1143_pp0_iter10_reg;
        icmp_ln144_reg_1143_pp0_iter8_reg <= icmp_ln144_reg_1143;
        icmp_ln144_reg_1143_pp0_iter9_reg <= icmp_ln144_reg_1143_pp0_iter8_reg;
        sext_ln137_cast_reg_1042 <= sext_ln137_cast_fu_252_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln144_reg_1143 == 1'd0))) begin
        and_ln144_2_reg_1197 <= and_ln144_2_fu_987_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_reg_1063_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fm_addr_1_reg_1122 <= add_ln143_4_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_fu_661_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln144_3_reg_1162 <= icmp_ln144_3_fu_841_p2;
        lshr_ln144_reg_1167 <= lshr_ln144_fu_857_p2;
        or_ln_reg_1152[0] <= or_ln_fu_829_p3[0];
        sub_ln144_2_reg_1172 <= sub_ln144_2_fu_863_p2;
        tmp_reg_1147 <= add_ln143_5_fu_657_p2[32'd15];
        trunc_ln144_2_reg_1177 <= trunc_ln144_2_fu_869_p1;
        zext_ln144_reg_1157[15 : 0] <= zext_ln144_fu_837_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln144_reg_1143 == 1'd0))) begin
        icmp_ln144_4_reg_1187 <= icmp_ln144_4_fu_971_p2;
        icmp_ln144_5_reg_1192 <= icmp_ln144_5_fu_977_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln137_fu_306_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln137_reg_1063_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln137_reg_1063 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        fm_blk_n_AR = m_axi_fm_ARREADY;
    end else begin
        fm_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_predicate_op192_writereq_state18 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        fm_blk_n_AW = m_axi_fm_AWREADY;
    end else begin
        fm_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_predicate_op209_writeresp_state24 == 1'b1)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        fm_blk_n_B = m_axi_fm_BVALID;
    end else begin
        fm_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        fm_blk_n_R = m_axi_fm_RVALID;
    end else begin
        fm_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln144_2_reg_1197) & (icmp_ln144_reg_1143_pp0_iter8_reg == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        fm_blk_n_W = m_axi_fm_WREADY;
    end else begin
        fm_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_247_ce = 1'b1;
    end else begin
        grp_fu_247_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_993_ce = 1'b1;
    end else begin
        grp_fu_993_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_fm_ARADDR = fm_addr_1_reg_1122;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln137_reg_1063 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_fm_ARADDR = fm_addr_reg_1109;
    end else begin
        m_axi_fm_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln137_reg_1063 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_fm_ARVALID = 1'b1;
    end else begin
        m_axi_fm_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op192_writereq_state18 == 1'b1))) begin
        m_axi_fm_AWADDR = fm_addr_reg_1109_pp0_iter7_reg;
    end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_fm_AWADDR = fm_addr_reg_1109_pp0_iter5_reg;
    end else begin
        m_axi_fm_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op192_writereq_state18 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_fm_AWVALID = 1'b1;
    end else begin
        m_axi_fm_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op209_writeresp_state24 == 1'b1)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_fm_BREADY = 1'b1;
    end else begin
        m_axi_fm_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_fm_RREADY = 1'b1;
    end else begin
        m_axi_fm_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op194_write_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        m_axi_fm_WDATA = 16'd0;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        m_axi_fm_WDATA = add_ln143_5_reg_1138_pp0_iter8_reg;
    end else begin
        m_axi_fm_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op194_write_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_fm_WVALID = 1'b1;
    end else begin
        m_axi_fm_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to11 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_fu_944_p5 = {{tmp_6_fu_937_p3}, {zext_ln144_4_fu_906_p1[51:0]}};

assign add_ln137_1_fu_513_p2 = (indvar_flatten371_load_reg_1058 + 23'd1);

assign add_ln137_fu_318_p2 = (k_fu_184 + 10'd1);

assign add_ln139_1_fu_528_p2 = (indvar_flatten338_load_reg_1053 + 15'd1);

assign add_ln139_fu_398_p2 = (select_ln137_fu_330_p3 + 7'd1);

assign add_ln141_fu_523_p2 = (select_ln139_reg_1103 + 8'd1);

assign add_ln143_1_fu_471_p2 = (select_ln139_3_fu_426_p3 + zext_ln143_1_fu_462_p1);

assign add_ln143_2_fu_487_p2 = (zext_ln143_2_fu_483_p1 + add_ln143_fu_466_p2);

assign add_ln143_3_fu_477_p2 = (add_ln143_1_fu_471_p2 + select_ln139_4_cast_fu_450_p1);

assign add_ln143_4_fu_645_p2 = (add_ln143_8_fu_639_p2 + zext_ln143_3_fu_631_p1);

assign add_ln143_5_fu_657_p2 = (fm_addr_1_read_reg_1133 + fm_addr_read_reg_1128_pp0_iter6_reg);

assign add_ln143_7_fu_634_p2 = ($signed(j_cast11_fu_628_p1) + $signed(sext_ln137_cast_reg_1042));

assign add_ln143_8_fu_639_p2 = (add_ln143_7_fu_634_p2 + zext_ln141_fu_624_p1);

assign add_ln143_fu_466_p2 = (zext_ln137_2_fu_360_p1 + output_feature_map);

assign add_ln144_1_fu_803_p2 = ($signed(trunc_ln144_fu_725_p1) + $signed(16'd65483));

assign add_ln144_2_fu_847_p2 = ($signed(sub_ln144_1_fu_719_p2) + $signed(32'd4294967242));

assign add_ln144_3_fu_890_p2 = (select_ln144_1_fu_881_p3 + zext_ln144_3_fu_887_p1);

assign add_ln144_4_fu_931_p2 = (sub_ln144_3_fu_926_p2 + select_ln144_2_fu_918_p3);

assign add_ln144_fu_729_p2 = ($signed(sub_ln144_1_fu_719_p2) + $signed(32'd4294967243));

assign and_ln137_fu_392_p2 = (xor_ln137_fu_380_p2 & icmp_ln141_fu_386_p2);

assign and_ln144_1_fu_817_p2 = (xor_ln144_fu_797_p2 & bit_select30_i_i_i_fu_809_p3);

assign and_ln144_2_fu_987_p2 = (or_ln144_1_fu_983_p2 & grp_fu_247_p2);

assign and_ln144_3_fu_771_p2 = (select_ln144_fu_681_p3 & lshr_ln144_2_fu_765_p2);

assign and_ln144_fu_783_p2 = (icmp_ln144_2_fu_777_p2 & icmp_ln144_1_fu_745_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (m_axi_fm_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_fm_BVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state19_io)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (m_axi_fm_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((m_axi_fm_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state19_io)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (m_axi_fm_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((m_axi_fm_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_00001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op209_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op209_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op209_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_block_state18_io)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)) | ((m_axi_fm_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op209_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_block_state18_io)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)) | ((m_axi_fm_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter5 = (m_axi_fm_RVALID == 1'b0);
end

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage1_iter6 = (m_axi_fm_RVALID == 1'b0);
end

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = ((m_axi_fm_WREADY == 1'b0) | ((m_axi_fm_AWREADY == 1'b0) & (ap_predicate_op192_writereq_state18 == 1'b1)));
end

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = ((m_axi_fm_WREADY == 1'b0) & (ap_predicate_op194_write_state19 == 1'b1));
end

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp0_stage0_iter11 = (m_axi_fm_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp0_stage1_iter11 = ((ap_predicate_op209_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_fm_ARREADY == 1'b0) & (icmp_ln137_reg_1063 == 1'd0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op192_writereq_state18 = ((1'd1 == and_ln144_2_reg_1197) & (icmp_ln144_reg_1143_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op194_write_state19 = ((1'd1 == and_ln144_2_reg_1197) & (icmp_ln144_reg_1143_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op209_writeresp_state24 = ((icmp_ln144_reg_1143_pp0_iter11_reg == 1'd0) & (1'd1 == and_ln144_2_reg_1197_pp0_iter11_reg));
end

assign bit_select30_i_i_i_fu_809_p3 = select_ln144_fu_681_p3[add_ln144_1_fu_803_p2];

assign grp_fu_247_p0 = LD_fu_944_p5;

assign grp_fu_993_p0 = grp_fu_993_p00;

assign grp_fu_993_p00 = select_ln137_1_fu_338_p3;

assign grp_fu_993_p1 = 23'd14720;

assign grp_fu_993_p2 = grp_fu_993_p20;

assign grp_fu_993_p20 = select_ln139_2_fu_585_p3;

assign icmp_ln137_fu_306_p2 = ((indvar_flatten371_fu_188 == 23'd7536640) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_324_p2 = ((indvar_flatten338_fu_180 == 15'd14720) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_386_p2 = ((j_fu_172 == 8'd160) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_745_p2 = (($signed(tmp_4_fu_735_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln144_2_fu_777_p2 = ((and_ln144_3_fu_771_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln144_3_fu_841_p2 = (($signed(add_ln144_fu_729_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln144_4_fu_971_p2 = ((add_ln144_4_fu_931_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln144_5_fu_977_p2 = ((trunc_ln144_3_fu_961_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_661_p2 = ((add_ln143_5_fu_657_p2 == 16'd0) ? 1'b1 : 1'b0);

assign j_cast11_fu_628_p1 = select_ln139_reg_1103_pp0_iter1_reg;

assign lshr_ln144_1_fu_896_p4 = {{add_ln144_3_fu_890_p2[63:1]}};

assign lshr_ln144_2_fu_765_p2 = 16'd65535 >> zext_ln144_5_fu_761_p1;

assign lshr_ln144_fu_857_p2 = zext_ln144_fu_837_p1 >> zext_ln144_1_fu_853_p1;

assign m_axi_fm_ARBURST = 2'd0;

assign m_axi_fm_ARCACHE = 4'd0;

assign m_axi_fm_ARID = 1'd0;

assign m_axi_fm_ARLEN = 32'd1;

assign m_axi_fm_ARLOCK = 2'd0;

assign m_axi_fm_ARPROT = 3'd0;

assign m_axi_fm_ARQOS = 4'd0;

assign m_axi_fm_ARREGION = 4'd0;

assign m_axi_fm_ARSIZE = 3'd0;

assign m_axi_fm_ARUSER = 1'd0;

assign m_axi_fm_AWBURST = 2'd0;

assign m_axi_fm_AWCACHE = 4'd0;

assign m_axi_fm_AWID = 1'd0;

assign m_axi_fm_AWLEN = 32'd1;

assign m_axi_fm_AWLOCK = 2'd0;

assign m_axi_fm_AWPROT = 3'd0;

assign m_axi_fm_AWQOS = 4'd0;

assign m_axi_fm_AWREGION = 4'd0;

assign m_axi_fm_AWSIZE = 3'd0;

assign m_axi_fm_AWUSER = 1'd0;

assign m_axi_fm_WID = 1'd0;

assign m_axi_fm_WLAST = 1'b0;

assign m_axi_fm_WSTRB = 2'd3;

assign m_axi_fm_WUSER = 1'd0;

assign mul_ln137_1_fu_354_p0 = mul_ln137_1_fu_354_p00;

assign mul_ln137_1_fu_354_p00 = select_ln137_1_fu_338_p3;

assign mul_ln137_1_fu_354_p1 = 25'd29440;

assign or_ln139_fu_404_p2 = (icmp_ln139_fu_324_p2 | and_ln137_fu_392_p2);

assign or_ln144_1_fu_983_p2 = (icmp_ln144_5_reg_1192 | icmp_ln144_4_reg_1187);

assign or_ln144_fu_823_p2 = (and_ln144_fu_783_p2 | and_ln144_1_fu_817_p2);

assign or_ln_fu_829_p3 = {{1'd0}, {or_ln144_fu_823_p2}};

assign select_ln137_1_fu_338_p3 = ((icmp_ln139_fu_324_p2[0:0] == 1'b1) ? add_ln137_fu_318_p2 : k_fu_184);

assign select_ln137_2_fu_603_p3 = ((icmp_ln139_reg_1067_pp0_iter1_reg[0:0] == 1'b1) ? 14'd0 : shl_ln_fu_596_p3);

assign select_ln137_3_fu_571_p3 = ((icmp_ln139_reg_1067[0:0] == 1'b1) ? 12'd0 : shl_ln141_1_fu_564_p3);

assign select_ln137_4_fu_364_p3 = ((icmp_ln139_fu_324_p2[0:0] == 1'b1) ? 15'd0 : shl_ln1_fu_290_p3);

assign select_ln137_5_fu_372_p3 = ((icmp_ln139_fu_324_p2[0:0] == 1'b1) ? 13'd0 : shl_ln143_1_fu_298_p3);

assign select_ln137_fu_330_p3 = ((icmp_ln139_fu_324_p2[0:0] == 1'b1) ? 7'd0 : i_fu_176);

assign select_ln139_1_fu_617_p3 = ((and_ln137_reg_1089_pp0_iter1_reg[0:0] == 1'b1) ? shl_ln141_mid1_fu_610_p3 : select_ln137_2_fu_603_p3);

assign select_ln139_2_fu_585_p3 = ((and_ln137_reg_1089[0:0] == 1'b1) ? shl_ln141_1_mid1_fu_578_p3 : select_ln137_3_fu_571_p3);

assign select_ln139_3_fu_426_p3 = ((and_ln137_fu_392_p2[0:0] == 1'b1) ? shl_ln143_mid1_fu_418_p3 : select_ln137_4_fu_364_p3);

assign select_ln139_4_cast_fu_450_p1 = select_ln139_4_fu_442_p3;

assign select_ln139_4_fu_442_p3 = ((and_ln137_fu_392_p2[0:0] == 1'b1) ? shl_ln143_1_mid1_fu_434_p3 : select_ln137_5_fu_372_p3);

assign select_ln139_5_fu_518_p3 = ((and_ln137_reg_1089[0:0] == 1'b1) ? add_ln139_reg_1096 : select_ln137_reg_1074);

assign select_ln139_6_fu_533_p3 = ((icmp_ln139_reg_1067[0:0] == 1'b1) ? 15'd1 : add_ln139_1_fu_528_p2);

assign select_ln139_fu_410_p3 = ((or_ln139_fu_404_p2[0:0] == 1'b1) ? 8'd0 : j_fu_172);

assign select_ln144_1_fu_881_p3 = ((icmp_ln144_3_reg_1162[0:0] == 1'b1) ? lshr_ln144_reg_1167 : shl_ln144_fu_876_p2);

assign select_ln144_2_fu_918_p3 = ((tmp_8_fu_910_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln144_fu_681_p3 = ((tmp_fu_667_p3[0:0] == 1'b1) ? sub_ln144_fu_675_p2 : add_ln143_5_fu_657_p2);

assign sext_ln137_cast_fu_252_p1 = $signed(sext_ln137);

assign sext_ln143_fu_503_p1 = $signed(trunc_ln7_fu_493_p4);

assign sext_ln144_fu_707_p1 = $signed(tmp_2_fu_699_p3);

assign shl_ln141_1_fu_564_p3 = {{i_1_reg_1047}, {5'd0}};

assign shl_ln141_1_mid1_fu_578_p3 = {{add_ln139_reg_1096}, {5'd0}};

assign shl_ln141_mid1_fu_610_p3 = {{add_ln139_reg_1096_pp0_iter1_reg}, {7'd0}};

assign shl_ln143_1_fu_298_p3 = {{i_fu_176}, {6'd0}};

assign shl_ln143_1_mid1_fu_434_p3 = {{add_ln139_fu_398_p2}, {6'd0}};

assign shl_ln143_2_fu_454_p3 = {{select_ln139_fu_410_p3}, {1'd0}};

assign shl_ln143_mid1_fu_418_p3 = {{add_ln139_fu_398_p2}, {8'd0}};

assign shl_ln144_fu_876_p2 = zext_ln144_reg_1157 << zext_ln144_2_fu_873_p1;

assign shl_ln1_fu_290_p3 = {{i_fu_176}, {8'd0}};

assign shl_ln_fu_596_p3 = {{i_1_reg_1047_pp0_iter1_reg}, {7'd0}};

assign sub_ln144_1_fu_719_p2 = (32'd16 - tmp_3_fu_711_p3);

assign sub_ln144_2_fu_863_p2 = (32'd54 - sub_ln144_1_fu_719_p2);

assign sub_ln144_3_fu_926_p2 = (11'd3 - trunc_ln144_2_reg_1177);

assign sub_ln144_4_fu_755_p2 = (4'd6 - trunc_ln144_1_fu_751_p1);

assign sub_ln144_fu_675_p2 = (16'd0 - add_ln143_5_fu_657_p2);

integer ap_tvar_int_0;

always @ (select_ln144_fu_681_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            tmp_1_fu_689_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1_fu_689_p4[ap_tvar_int_0] = select_ln144_fu_681_p3[15 - ap_tvar_int_0];
        end
    end
end

assign tmp_2_fu_699_p3 = {{1'd1}, {tmp_1_fu_689_p4}};


always @ (sext_ln144_fu_707_p1) begin
    if (sext_ln144_fu_707_p1[0] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd0;
    end else if (sext_ln144_fu_707_p1[1] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd1;
    end else if (sext_ln144_fu_707_p1[2] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd2;
    end else if (sext_ln144_fu_707_p1[3] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd3;
    end else if (sext_ln144_fu_707_p1[4] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd4;
    end else if (sext_ln144_fu_707_p1[5] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd5;
    end else if (sext_ln144_fu_707_p1[6] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd6;
    end else if (sext_ln144_fu_707_p1[7] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd7;
    end else if (sext_ln144_fu_707_p1[8] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd8;
    end else if (sext_ln144_fu_707_p1[9] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd9;
    end else if (sext_ln144_fu_707_p1[10] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd10;
    end else if (sext_ln144_fu_707_p1[11] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd11;
    end else if (sext_ln144_fu_707_p1[12] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd12;
    end else if (sext_ln144_fu_707_p1[13] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd13;
    end else if (sext_ln144_fu_707_p1[14] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd14;
    end else if (sext_ln144_fu_707_p1[15] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd15;
    end else if (sext_ln144_fu_707_p1[16] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd16;
    end else if (sext_ln144_fu_707_p1[17] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd17;
    end else if (sext_ln144_fu_707_p1[18] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd18;
    end else if (sext_ln144_fu_707_p1[19] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd19;
    end else if (sext_ln144_fu_707_p1[20] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd20;
    end else if (sext_ln144_fu_707_p1[21] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd21;
    end else if (sext_ln144_fu_707_p1[22] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd22;
    end else if (sext_ln144_fu_707_p1[23] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd23;
    end else if (sext_ln144_fu_707_p1[24] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd24;
    end else if (sext_ln144_fu_707_p1[25] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd25;
    end else if (sext_ln144_fu_707_p1[26] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd26;
    end else if (sext_ln144_fu_707_p1[27] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd27;
    end else if (sext_ln144_fu_707_p1[28] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd28;
    end else if (sext_ln144_fu_707_p1[29] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd29;
    end else if (sext_ln144_fu_707_p1[30] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd30;
    end else if (sext_ln144_fu_707_p1[31] == 1'b1) begin
        tmp_3_fu_711_p3 = 32'd31;
    end else begin
        tmp_3_fu_711_p3 = 32'd32;
    end
end

assign tmp_4_fu_735_p4 = {{add_ln144_fu_729_p2[31:1]}};

assign tmp_6_fu_937_p3 = {{tmp_reg_1147}, {add_ln144_4_fu_931_p2}};

assign tmp_7_fu_789_p3 = add_ln144_fu_729_p2[32'd31];

assign tmp_8_fu_910_p3 = add_ln144_3_fu_890_p2[32'd54];

assign tmp_fu_667_p3 = add_ln143_5_fu_657_p2[32'd15];

assign trunc_ln144_1_fu_751_p1 = sub_ln144_1_fu_719_p2[3:0];

assign trunc_ln144_2_fu_869_p1 = tmp_3_fu_711_p3[10:0];

assign trunc_ln144_3_fu_961_p4 = {{add_ln144_3_fu_890_p2[52:1]}};

assign trunc_ln144_fu_725_p1 = sub_ln144_1_fu_719_p2[15:0];

assign trunc_ln7_fu_493_p4 = {{add_ln143_2_fu_487_p2[63:1]}};

assign xor_ln137_fu_380_p2 = (icmp_ln139_fu_324_p2 ^ 1'd1);

assign xor_ln144_fu_797_p2 = (tmp_7_fu_789_p3 ^ 1'd1);

assign zext_ln137_2_fu_360_p1 = mul_ln137_1_fu_354_p2;

assign zext_ln141_fu_624_p1 = select_ln139_1_fu_617_p3;

assign zext_ln143_1_fu_462_p1 = shl_ln143_2_fu_454_p3;

assign zext_ln143_2_fu_483_p1 = add_ln143_3_fu_477_p2;

assign zext_ln143_3_fu_631_p1 = grp_fu_993_p3;

assign zext_ln144_1_fu_853_p1 = add_ln144_2_fu_847_p2;

assign zext_ln144_2_fu_873_p1 = sub_ln144_2_reg_1172;

assign zext_ln144_3_fu_887_p1 = or_ln_reg_1152;

assign zext_ln144_4_fu_906_p1 = lshr_ln144_1_fu_896_p4;

assign zext_ln144_5_fu_761_p1 = sub_ln144_4_fu_755_p2;

assign zext_ln144_fu_837_p1 = select_ln144_fu_681_p3;

always @ (posedge ap_clk) begin
    or_ln_reg_1152[1] <= 1'b0;
    zext_ln144_reg_1157[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //layer_top_layer3_Pipeline_VITIS_LOOP_137_1_VITIS_LOOP_139_2_VITIS_LOOP_141_3
