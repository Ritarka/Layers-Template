// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module layer_top_layer3_Pipeline_VITIS_LOOP_137_1_VITIS_LOOP_139_2_VITIS_LOOP_141_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_fm_AWVALID,
        m_axi_fm_AWREADY,
        m_axi_fm_AWADDR,
        m_axi_fm_AWID,
        m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT,
        m_axi_fm_AWQOS,
        m_axi_fm_AWREGION,
        m_axi_fm_AWUSER,
        m_axi_fm_WVALID,
        m_axi_fm_WREADY,
        m_axi_fm_WDATA,
        m_axi_fm_WSTRB,
        m_axi_fm_WLAST,
        m_axi_fm_WID,
        m_axi_fm_WUSER,
        m_axi_fm_ARVALID,
        m_axi_fm_ARREADY,
        m_axi_fm_ARADDR,
        m_axi_fm_ARID,
        m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT,
        m_axi_fm_ARQOS,
        m_axi_fm_ARREGION,
        m_axi_fm_ARUSER,
        m_axi_fm_RVALID,
        m_axi_fm_RREADY,
        m_axi_fm_RDATA,
        m_axi_fm_RLAST,
        m_axi_fm_RID,
        m_axi_fm_RFIFONUM,
        m_axi_fm_RUSER,
        m_axi_fm_RRESP,
        m_axi_fm_BVALID,
        m_axi_fm_BREADY,
        m_axi_fm_BRESP,
        m_axi_fm_BID,
        m_axi_fm_BUSER,
        output_feature_map,
        sext_ln137
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_fm_AWVALID;
input   m_axi_fm_AWREADY;
output  [63:0] m_axi_fm_AWADDR;
output  [0:0] m_axi_fm_AWID;
output  [31:0] m_axi_fm_AWLEN;
output  [2:0] m_axi_fm_AWSIZE;
output  [1:0] m_axi_fm_AWBURST;
output  [1:0] m_axi_fm_AWLOCK;
output  [3:0] m_axi_fm_AWCACHE;
output  [2:0] m_axi_fm_AWPROT;
output  [3:0] m_axi_fm_AWQOS;
output  [3:0] m_axi_fm_AWREGION;
output  [0:0] m_axi_fm_AWUSER;
output   m_axi_fm_WVALID;
input   m_axi_fm_WREADY;
output  [15:0] m_axi_fm_WDATA;
output  [1:0] m_axi_fm_WSTRB;
output   m_axi_fm_WLAST;
output  [0:0] m_axi_fm_WID;
output  [0:0] m_axi_fm_WUSER;
output   m_axi_fm_ARVALID;
input   m_axi_fm_ARREADY;
output  [63:0] m_axi_fm_ARADDR;
output  [0:0] m_axi_fm_ARID;
output  [31:0] m_axi_fm_ARLEN;
output  [2:0] m_axi_fm_ARSIZE;
output  [1:0] m_axi_fm_ARBURST;
output  [1:0] m_axi_fm_ARLOCK;
output  [3:0] m_axi_fm_ARCACHE;
output  [2:0] m_axi_fm_ARPROT;
output  [3:0] m_axi_fm_ARQOS;
output  [3:0] m_axi_fm_ARREGION;
output  [0:0] m_axi_fm_ARUSER;
input   m_axi_fm_RVALID;
output   m_axi_fm_RREADY;
input  [15:0] m_axi_fm_RDATA;
input   m_axi_fm_RLAST;
input  [0:0] m_axi_fm_RID;
input  [9:0] m_axi_fm_RFIFONUM;
input  [0:0] m_axi_fm_RUSER;
input  [1:0] m_axi_fm_RRESP;
input   m_axi_fm_BVALID;
output   m_axi_fm_BREADY;
input  [1:0] m_axi_fm_BRESP;
input  [0:0] m_axi_fm_BID;
input  [0:0] m_axi_fm_BUSER;
input  [63:0] output_feature_map;
input  [62:0] sext_ln137;

reg ap_idle;
reg m_axi_fm_AWVALID;
reg[63:0] m_axi_fm_AWADDR;
reg m_axi_fm_WVALID;
reg[15:0] m_axi_fm_WDATA;
reg m_axi_fm_ARVALID;
reg[63:0] m_axi_fm_ARADDR;
reg m_axi_fm_RREADY;
reg m_axi_fm_BREADY;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
reg   [0:0] icmp_ln137_reg_1086;
reg   [0:0] icmp_ln137_reg_1086_pp0_iter1_reg;
reg    ap_block_state6_io;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
reg    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
reg   [0:0] icmp_ln1040_reg_1184;
reg   [0:0] icmp_ln1040_reg_1184_pp0_iter8_reg;
reg   [0:0] empty_45_reg_1228;
reg    ap_predicate_op201_writereq_state18;
reg    ap_block_state18_io;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
reg   [0:0] icmp_ln1040_reg_1184_pp0_iter11_reg;
reg   [0:0] empty_45_reg_1228_pp0_iter11_reg;
reg    ap_predicate_op218_writeresp_state24;
reg    ap_block_state24_pp0_stage1_iter11;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln137_fu_292_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fm_blk_n_AR;
wire    ap_block_pp0_stage1;
reg    fm_blk_n_R;
wire    ap_block_pp0_stage0;
reg    fm_blk_n_AW;
reg    fm_blk_n_W;
reg    fm_blk_n_B;
reg   [0:0] icmp_ln137_reg_1086_pp0_iter2_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_state7_io;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
reg    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
reg    ap_predicate_op203_write_state19;
reg    ap_block_state19_io;
wire    ap_block_state21_pp0_stage0_iter10;
reg    ap_block_state23_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_11001;
wire  signed [63:0] sext_ln137_cast_fu_250_p1;
reg  signed [63:0] sext_ln137_cast_reg_1066;
reg   [14:0] indvar_flatten338_load_reg_1071;
reg    ap_block_pp0_stage1_11001;
reg   [22:0] indvar_flatten376_load_reg_1076;
wire   [9:0] add_ln137_fu_298_p2;
reg   [9:0] add_ln137_reg_1090;
wire   [0:0] icmp_ln139_fu_304_p2;
reg   [0:0] icmp_ln139_reg_1095;
reg   [0:0] icmp_ln139_reg_1095_pp0_iter1_reg;
reg   [6:0] i_1_reg_1118;
wire  signed [22:0] grp_fu_1005_p2;
reg   [22:0] mul_ln813_reg_1124;
wire   [6:0] select_ln137_fu_379_p3;
reg   [6:0] select_ln137_reg_1130;
wire   [0:0] and_ln137_fu_419_p2;
reg   [0:0] and_ln137_reg_1135;
wire   [6:0] add_ln139_fu_425_p2;
reg   [6:0] add_ln139_reg_1142;
wire   [7:0] select_ln139_fu_436_p3;
reg   [7:0] select_ln139_reg_1149;
reg   [63:0] fm_addr_reg_1155;
reg   [63:0] fm_addr_reg_1155_pp0_iter3_reg;
reg   [63:0] fm_addr_reg_1155_pp0_iter4_reg;
reg   [63:0] fm_addr_reg_1155_pp0_iter5_reg;
reg   [63:0] fm_addr_reg_1155_pp0_iter6_reg;
reg   [63:0] fm_addr_reg_1155_pp0_iter7_reg;
reg   [63:0] fm_addr_reg_1155_pp0_iter8_reg;
reg   [63:0] fm_addr_1_reg_1163;
reg   [15:0] fm_addr_read_reg_1169;
reg   [15:0] fm_addr_1_read_reg_1174;
wire   [15:0] p_Val2_s_fu_667_p2;
reg   [15:0] p_Val2_s_reg_1179;
reg   [15:0] p_Val2_s_reg_1179_pp0_iter8_reg;
wire   [0:0] icmp_ln1040_fu_671_p2;
reg   [0:0] icmp_ln1040_reg_1184_pp0_iter9_reg;
reg   [0:0] icmp_ln1040_reg_1184_pp0_iter10_reg;
wire   [0:0] p_Result_7_fu_677_p3;
reg   [0:0] p_Result_7_reg_1188;
reg   [62:0] m_reg_1193;
wire   [10:0] select_ln1048_fu_925_p3;
reg   [10:0] select_ln1048_reg_1198;
wire   [10:0] trunc_ln1048_fu_933_p1;
reg   [10:0] trunc_ln1048_reg_1203;
reg   [51:0] tmp_3_reg_1208;
wire   [0:0] notlhs_fu_984_p2;
reg   [0:0] notlhs_reg_1218;
wire   [0:0] notrhs_fu_990_p2;
reg   [0:0] notrhs_reg_1223;
wire   [0:0] empty_45_fu_999_p2;
reg   [0:0] empty_45_reg_1228_pp0_iter9_reg;
reg   [0:0] empty_45_reg_1228_pp0_iter10_reg;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_condition_exit_pp0_iter2_stage1;
wire  signed [63:0] sext_ln813_fu_524_p1;
wire   [63:0] add_ln813_4_fu_640_p2;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] j_fu_170;
wire   [7:0] add_ln141_fu_652_p2;
wire    ap_loop_init;
reg   [6:0] i_fu_174;
wire   [6:0] select_ln139_5_fu_621_p3;
reg   [14:0] indvar_flatten338_fu_178;
wire   [14:0] select_ln139_6_fu_340_p3;
reg   [9:0] k_fu_182;
wire   [9:0] select_ln137_2_fu_310_p3;
reg   [22:0] indvar_flatten376_fu_186;
wire   [22:0] add_ln137_2_fu_327_p2;
wire   [63:0] grp_fu_245_p0;
wire   [14:0] add_ln139_1_fu_335_p2;
wire   [24:0] grp_fu_1011_p2;
wire   [63:0] zext_ln137_1_fu_386_p1;
wire   [14:0] shl_ln1_fu_360_p3;
wire   [12:0] shl_ln813_1_fu_368_p3;
wire   [0:0] icmp_ln141_fu_413_p2;
wire   [0:0] xor_ln137_fu_408_p2;
wire   [0:0] or_ln139_fu_431_p2;
wire   [14:0] shl_ln813_mid1_fu_444_p3;
wire   [14:0] select_ln137_4_fu_394_p3;
wire   [12:0] shl_ln813_1_mid1_fu_460_p3;
wire   [12:0] select_ln137_5_fu_401_p3;
wire   [12:0] select_ln139_3_fu_468_p3;
wire   [8:0] shl_ln813_2_fu_480_p3;
wire   [14:0] zext_ln813_6_fu_476_p1;
wire   [14:0] select_ln139_2_fu_452_p3;
wire   [14:0] add_ln813_1_fu_492_p2;
wire   [14:0] zext_ln813_2_fu_488_p1;
wire   [14:0] add_ln813_3_fu_498_p2;
wire   [63:0] zext_ln813_3_fu_504_p1;
wire   [63:0] add_ln137_1_fu_389_p2;
wire   [63:0] add_ln813_2_fu_508_p2;
wire   [62:0] trunc_ln7_fu_514_p4;
wire   [11:0] shl_ln141_1_fu_541_p3;
wire   [22:0] zext_ln813_1_fu_548_p1;
wire   [22:0] select_ln137_1_fu_557_p1;
wire  signed [22:0] grp_fu_1018_p2;
wire   [13:0] shl_ln_fu_534_p3;
wire   [22:0] select_ln137_6_fu_569_p1;
(* use_dsp48 = "no" *) wire   [22:0] add_ln813_fu_552_p2;
wire   [13:0] shl_ln141_mid1_fu_575_p3;
wire   [13:0] select_ln137_3_fu_562_p3;
wire   [13:0] select_ln139_1_fu_582_p3;
wire   [11:0] shl_ln141_1_mid1_fu_593_p3;
wire   [22:0] select_ln137_1_fu_557_p3;
wire   [22:0] zext_ln813_5_fu_600_p1;
wire   [22:0] add_ln813_5_fu_604_p2;
wire   [22:0] select_ln137_6_fu_569_p3;
wire   [22:0] select_ln139_4_fu_610_p3;
wire   [63:0] j_cast11_fu_626_p1;
wire   [63:0] add_ln813_6_fu_629_p2;
wire   [63:0] zext_ln141_fu_589_p1;
wire   [63:0] add_ln813_7_fu_634_p2;
wire   [63:0] zext_ln139_fu_617_p1;
wire   [15:0] tmp_V_fu_685_p2;
wire   [15:0] tmp_V_2_fu_691_p3;
reg   [15:0] p_Result_s_fu_699_p4;
wire   [16:0] p_Result_8_fu_709_p3;
wire  signed [31:0] sext_ln1198_fu_717_p1;
reg   [31:0] l_fu_721_p3;
wire   [31:0] sub_ln1049_fu_729_p2;
wire   [31:0] lsb_index_fu_739_p2;
wire   [30:0] tmp_fu_745_p4;
wire   [3:0] trunc_ln1052_fu_761_p1;
wire   [3:0] sub_ln1052_fu_765_p2;
wire   [15:0] zext_ln1052_fu_771_p1;
wire   [15:0] lshr_ln1052_fu_775_p2;
wire   [15:0] p_Result_4_fu_781_p2;
wire   [0:0] icmp_ln1051_fu_755_p2;
wire   [0:0] icmp_ln1052_fu_787_p2;
wire   [0:0] tmp_4_fu_799_p3;
wire   [15:0] trunc_ln1049_fu_735_p1;
wire   [15:0] add_ln1054_fu_813_p2;
wire   [0:0] p_Result_3_fu_819_p3;
wire   [0:0] xor_ln1054_fu_807_p2;
wire   [0:0] and_ln1054_fu_827_p2;
wire   [0:0] a_fu_793_p2;
wire   [0:0] or_ln1054_fu_833_p2;
wire   [31:0] add_ln1063_fu_857_p2;
wire   [63:0] zext_ln1062_fu_847_p1;
wire   [63:0] zext_ln1063_fu_863_p1;
wire   [31:0] sub_ln1064_fu_873_p2;
wire   [63:0] zext_ln1064_fu_879_p1;
wire   [0:0] icmp_ln1063_fu_851_p2;
wire   [63:0] lshr_ln1063_fu_867_p2;
wire   [63:0] shl_ln1064_fu_883_p2;
wire   [1:0] or_ln_fu_839_p3;
wire   [63:0] m_2_fu_889_p3;
wire   [63:0] zext_ln1066_fu_897_p1;
wire   [63:0] m_3_fu_901_p2;
wire   [0:0] p_Result_5_fu_917_p3;
wire   [10:0] sub_ln1070_fu_950_p2;
wire   [10:0] add_ln1076_fu_955_p2;
wire   [63:0] zext_ln1067_fu_947_p1;
wire   [11:0] tmp_2_fu_960_p3;
wire   [63:0] p_Result_9_fu_967_p5;
wire   [0:0] empty_44_fu_995_p2;
wire   [0:0] grp_fu_245_p2;
wire   [9:0] grp_fu_1005_p0;
wire   [13:0] grp_fu_1005_p1;
wire   [9:0] grp_fu_1011_p0;
wire   [14:0] grp_fu_1011_p1;
wire   [9:0] grp_fu_1018_p0;
wire   [13:0] grp_fu_1018_p1;
reg    grp_fu_245_ce;
reg    ap_block_pp0_stage1_00001;
reg    grp_fu_1005_ce;
reg    grp_fu_1011_ce;
reg    grp_fu_1018_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to11;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [22:0] grp_fu_1005_p00;
wire   [24:0] grp_fu_1011_p00;
wire   [22:0] grp_fu_1018_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

layer_top_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U2949(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_245_p0),
    .din1(64'd0),
    .ce(grp_fu_245_ce),
    .opcode(5'd4),
    .dout(grp_fu_245_p2)
);

layer_top_mul_mul_10ns_14ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
mul_mul_10ns_14ns_23_4_1_U2950(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1005_p0),
    .din1(grp_fu_1005_p1),
    .ce(grp_fu_1005_ce),
    .dout(grp_fu_1005_p2)
);

layer_top_mul_mul_10ns_15ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 25 ))
mul_mul_10ns_15ns_25_4_1_U2951(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1011_p0),
    .din1(grp_fu_1011_p1),
    .ce(grp_fu_1011_ce),
    .dout(grp_fu_1011_p2)
);

layer_top_mul_mul_10ns_14ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
mul_mul_10ns_14ns_23_4_1_U2952(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1018_p0),
    .din1(grp_fu_1018_p1),
    .ce(grp_fu_1018_ce),
    .dout(grp_fu_1018_p2)
);

layer_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage1)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_174 <= 7'd0;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd0))) begin
        i_fu_174 <= select_ln139_5_fu_621_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten338_fu_178 <= 15'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_1086 == 1'd0))) begin
            indvar_flatten338_fu_178 <= select_ln139_6_fu_340_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten376_fu_186 <= 23'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_1086 == 1'd0))) begin
            indvar_flatten376_fu_186 <= add_ln137_2_fu_327_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_fu_170 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd0))) begin
        j_fu_170 <= add_ln141_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_fu_182 <= 10'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln137_fu_292_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        k_fu_182 <= select_ln137_2_fu_310_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln137_fu_292_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln137_reg_1090 <= add_ln137_fu_298_p2;
        icmp_ln139_reg_1095 <= icmp_ln139_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd0))) begin
        add_ln139_reg_1142 <= add_ln139_fu_425_p2;
        and_ln137_reg_1135 <= and_ln137_fu_419_p2;
        fm_addr_reg_1155 <= sext_ln813_fu_524_p1;
        select_ln137_reg_1130 <= select_ln137_fu_379_p3;
        select_ln139_reg_1149 <= select_ln139_fu_436_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        fm_addr_1_read_reg_1174 <= m_axi_fm_RDATA;
        icmp_ln137_reg_1086 <= icmp_ln137_fu_292_p2;
        icmp_ln137_reg_1086_pp0_iter1_reg <= icmp_ln137_reg_1086;
        icmp_ln137_reg_1086_pp0_iter2_reg <= icmp_ln137_reg_1086_pp0_iter1_reg;
        icmp_ln139_reg_1095_pp0_iter1_reg <= icmp_ln139_reg_1095;
        indvar_flatten338_load_reg_1071 <= indvar_flatten338_fu_178;
        indvar_flatten376_load_reg_1076 <= indvar_flatten376_fu_186;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1040_reg_1184 == 1'd0))) begin
        empty_45_reg_1228 <= empty_45_fu_999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_45_reg_1228_pp0_iter10_reg <= empty_45_reg_1228_pp0_iter9_reg;
        empty_45_reg_1228_pp0_iter11_reg <= empty_45_reg_1228_pp0_iter10_reg;
        empty_45_reg_1228_pp0_iter9_reg <= empty_45_reg_1228;
        fm_addr_read_reg_1169 <= m_axi_fm_RDATA;
        fm_addr_reg_1155_pp0_iter3_reg <= fm_addr_reg_1155;
        fm_addr_reg_1155_pp0_iter4_reg <= fm_addr_reg_1155_pp0_iter3_reg;
        fm_addr_reg_1155_pp0_iter5_reg <= fm_addr_reg_1155_pp0_iter4_reg;
        fm_addr_reg_1155_pp0_iter6_reg <= fm_addr_reg_1155_pp0_iter5_reg;
        fm_addr_reg_1155_pp0_iter7_reg <= fm_addr_reg_1155_pp0_iter6_reg;
        fm_addr_reg_1155_pp0_iter8_reg <= fm_addr_reg_1155_pp0_iter7_reg;
        i_1_reg_1118 <= i_fu_174;
        icmp_ln1040_reg_1184 <= icmp_ln1040_fu_671_p2;
        icmp_ln1040_reg_1184_pp0_iter10_reg <= icmp_ln1040_reg_1184_pp0_iter9_reg;
        icmp_ln1040_reg_1184_pp0_iter11_reg <= icmp_ln1040_reg_1184_pp0_iter10_reg;
        icmp_ln1040_reg_1184_pp0_iter8_reg <= icmp_ln1040_reg_1184;
        icmp_ln1040_reg_1184_pp0_iter9_reg <= icmp_ln1040_reg_1184_pp0_iter8_reg;
        mul_ln813_reg_1124 <= grp_fu_1005_p2;
        p_Val2_s_reg_1179 <= p_Val2_s_fu_667_p2;
        p_Val2_s_reg_1179_pp0_iter8_reg <= p_Val2_s_reg_1179;
        sext_ln137_cast_reg_1066 <= sext_ln137_cast_fu_250_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd0))) begin
        fm_addr_1_reg_1163 <= add_ln813_4_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1040_fu_671_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_reg_1193 <= {{m_3_fu_901_p2[63:1]}};
        p_Result_7_reg_1188 <= p_Val2_s_fu_667_p2[32'd15];
        select_ln1048_reg_1198[0] <= select_ln1048_fu_925_p3[0];
        tmp_3_reg_1208 <= {{m_3_fu_901_p2[52:1]}};
        trunc_ln1048_reg_1203 <= trunc_ln1048_fu_933_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1040_reg_1184 == 1'd0))) begin
        notlhs_reg_1218 <= notlhs_fu_984_p2;
        notrhs_reg_1223 <= notrhs_fu_990_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln137_fu_292_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln137_reg_1086_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd0)))) begin
        fm_blk_n_AR = m_axi_fm_ARREADY;
    end else begin
        fm_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_predicate_op201_writereq_state18 == 1'b1)))) begin
        fm_blk_n_AW = m_axi_fm_AWREADY;
    end else begin
        fm_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_predicate_op218_writeresp_state24 == 1'b1)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        fm_blk_n_B = m_axi_fm_BVALID;
    end else begin
        fm_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        fm_blk_n_R = m_axi_fm_RVALID;
    end else begin
        fm_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (empty_45_reg_1228 == 1'd1) & (icmp_ln1040_reg_1184_pp0_iter8_reg == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        fm_blk_n_W = m_axi_fm_WREADY;
    end else begin
        fm_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_1005_ce = 1'b1;
    end else begin
        grp_fu_1005_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_1011_ce = 1'b1;
    end else begin
        grp_fu_1011_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_1018_ce = 1'b1;
    end else begin
        grp_fu_1018_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_245_ce = 1'b1;
    end else begin
        grp_fu_245_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln137_reg_1086_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_fm_ARADDR = fm_addr_1_reg_1163;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd0))) begin
        m_axi_fm_ARADDR = fm_addr_reg_1155;
    end else begin
        m_axi_fm_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln137_reg_1086_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd0)))) begin
        m_axi_fm_ARVALID = 1'b1;
    end else begin
        m_axi_fm_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op201_writereq_state18 == 1'b1))) begin
        m_axi_fm_AWADDR = fm_addr_reg_1155_pp0_iter8_reg;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_fm_AWADDR = fm_addr_reg_1155_pp0_iter6_reg;
    end else begin
        m_axi_fm_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op201_writereq_state18 == 1'b1)))) begin
        m_axi_fm_AWVALID = 1'b1;
    end else begin
        m_axi_fm_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op218_writeresp_state24 == 1'b1)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_fm_BREADY = 1'b1;
    end else begin
        m_axi_fm_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_fm_RREADY = 1'b1;
    end else begin
        m_axi_fm_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op203_write_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        m_axi_fm_WDATA = 16'd0;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        m_axi_fm_WDATA = p_Val2_s_reg_1179_pp0_iter8_reg;
    end else begin
        m_axi_fm_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op203_write_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_fm_WVALID = 1'b1;
    end else begin
        m_axi_fm_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to11 == 1'b1) & (ap_start_int == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_793_p2 = (icmp_ln1052_fu_787_p2 & icmp_ln1051_fu_755_p2);

assign add_ln1054_fu_813_p2 = ($signed(trunc_ln1049_fu_735_p1) + $signed(16'd65483));

assign add_ln1063_fu_857_p2 = ($signed(sub_ln1049_fu_729_p2) + $signed(32'd4294967242));

assign add_ln1076_fu_955_p2 = (sub_ln1070_fu_950_p2 + select_ln1048_reg_1198);

assign add_ln137_1_fu_389_p2 = (zext_ln137_1_fu_386_p1 + output_feature_map);

assign add_ln137_2_fu_327_p2 = (indvar_flatten376_load_reg_1076 + 23'd1);

assign add_ln137_fu_298_p2 = (k_fu_182 + 10'd1);

assign add_ln139_1_fu_335_p2 = (indvar_flatten338_load_reg_1071 + 15'd1);

assign add_ln139_fu_425_p2 = (select_ln137_fu_379_p3 + 7'd1);

assign add_ln141_fu_652_p2 = (select_ln139_reg_1149 + 8'd1);

assign add_ln813_1_fu_492_p2 = (zext_ln813_6_fu_476_p1 + select_ln139_2_fu_452_p3);

assign add_ln813_2_fu_508_p2 = (zext_ln813_3_fu_504_p1 + add_ln137_1_fu_389_p2);

assign add_ln813_3_fu_498_p2 = (add_ln813_1_fu_492_p2 + zext_ln813_2_fu_488_p1);

assign add_ln813_4_fu_640_p2 = (add_ln813_7_fu_634_p2 + zext_ln139_fu_617_p1);

assign add_ln813_5_fu_604_p2 = (select_ln137_1_fu_557_p3 + zext_ln813_5_fu_600_p1);

assign add_ln813_6_fu_629_p2 = ($signed(j_cast11_fu_626_p1) + $signed(sext_ln137_cast_reg_1066));

assign add_ln813_7_fu_634_p2 = (add_ln813_6_fu_629_p2 + zext_ln141_fu_589_p1);

assign add_ln813_fu_552_p2 = (mul_ln813_reg_1124 + zext_ln813_1_fu_548_p1);

assign and_ln1054_fu_827_p2 = (xor_ln1054_fu_807_p2 & p_Result_3_fu_819_p3);

assign and_ln137_fu_419_p2 = (xor_ln137_fu_408_p2 & icmp_ln141_fu_413_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state19_io)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((m_axi_fm_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state19_io)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((m_axi_fm_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_00001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op218_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op218_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op218_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_block_state18_io)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op218_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_block_state18_io)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (m_axi_fm_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter6 = (m_axi_fm_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state14_pp0_stage1_iter6 = (m_axi_fm_RVALID == 1'b0);
end

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = ((m_axi_fm_WREADY == 1'b0) | ((m_axi_fm_AWREADY == 1'b0) & (ap_predicate_op201_writereq_state18 == 1'b1)));
end

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = ((m_axi_fm_WREADY == 1'b0) & (ap_predicate_op203_write_state19 == 1'b1));
end

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp0_stage0_iter11 = (m_axi_fm_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp0_stage1_iter11 = ((ap_predicate_op218_writeresp_state24 == 1'b1) & (m_axi_fm_BVALID == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_fm_ARREADY == 1'b0) & (icmp_ln137_reg_1086_pp0_iter1_reg == 1'd0));
end

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_fm_ARREADY == 1'b0) & (icmp_ln137_reg_1086_pp0_iter2_reg == 1'd0));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op201_writereq_state18 = ((empty_45_reg_1228 == 1'd1) & (icmp_ln1040_reg_1184_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op203_write_state19 = ((empty_45_reg_1228 == 1'd1) & (icmp_ln1040_reg_1184_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op218_writeresp_state24 = ((empty_45_reg_1228_pp0_iter11_reg == 1'd1) & (icmp_ln1040_reg_1184_pp0_iter11_reg == 1'd0));
end

assign empty_44_fu_995_p2 = (notrhs_reg_1223 | notlhs_reg_1218);

assign empty_45_fu_999_p2 = (grp_fu_245_p2 & empty_44_fu_995_p2);

assign grp_fu_1005_p0 = grp_fu_1005_p00;

assign grp_fu_1005_p00 = k_fu_182;

assign grp_fu_1005_p1 = 23'd14720;

assign grp_fu_1011_p0 = grp_fu_1011_p00;

assign grp_fu_1011_p00 = select_ln137_2_fu_310_p3;

assign grp_fu_1011_p1 = 25'd29440;

assign grp_fu_1018_p0 = grp_fu_1018_p00;

assign grp_fu_1018_p00 = add_ln137_reg_1090;

assign grp_fu_1018_p1 = 23'd14720;

assign grp_fu_245_p0 = p_Result_9_fu_967_p5;

assign icmp_ln1040_fu_671_p2 = ((p_Val2_s_fu_667_p2 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1051_fu_755_p2 = (($signed(tmp_fu_745_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1052_fu_787_p2 = ((p_Result_4_fu_781_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1063_fu_851_p2 = (($signed(lsb_index_fu_739_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_292_p2 = ((indvar_flatten376_fu_186 == 23'd7536640) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_304_p2 = ((indvar_flatten338_fu_178 == 15'd14720) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_413_p2 = ((j_fu_170 == 8'd160) ? 1'b1 : 1'b0);

assign j_cast11_fu_626_p1 = select_ln139_reg_1149;


always @ (sext_ln1198_fu_717_p1) begin
    if (sext_ln1198_fu_717_p1[0] == 1'b1) begin
        l_fu_721_p3 = 32'd0;
    end else if (sext_ln1198_fu_717_p1[1] == 1'b1) begin
        l_fu_721_p3 = 32'd1;
    end else if (sext_ln1198_fu_717_p1[2] == 1'b1) begin
        l_fu_721_p3 = 32'd2;
    end else if (sext_ln1198_fu_717_p1[3] == 1'b1) begin
        l_fu_721_p3 = 32'd3;
    end else if (sext_ln1198_fu_717_p1[4] == 1'b1) begin
        l_fu_721_p3 = 32'd4;
    end else if (sext_ln1198_fu_717_p1[5] == 1'b1) begin
        l_fu_721_p3 = 32'd5;
    end else if (sext_ln1198_fu_717_p1[6] == 1'b1) begin
        l_fu_721_p3 = 32'd6;
    end else if (sext_ln1198_fu_717_p1[7] == 1'b1) begin
        l_fu_721_p3 = 32'd7;
    end else if (sext_ln1198_fu_717_p1[8] == 1'b1) begin
        l_fu_721_p3 = 32'd8;
    end else if (sext_ln1198_fu_717_p1[9] == 1'b1) begin
        l_fu_721_p3 = 32'd9;
    end else if (sext_ln1198_fu_717_p1[10] == 1'b1) begin
        l_fu_721_p3 = 32'd10;
    end else if (sext_ln1198_fu_717_p1[11] == 1'b1) begin
        l_fu_721_p3 = 32'd11;
    end else if (sext_ln1198_fu_717_p1[12] == 1'b1) begin
        l_fu_721_p3 = 32'd12;
    end else if (sext_ln1198_fu_717_p1[13] == 1'b1) begin
        l_fu_721_p3 = 32'd13;
    end else if (sext_ln1198_fu_717_p1[14] == 1'b1) begin
        l_fu_721_p3 = 32'd14;
    end else if (sext_ln1198_fu_717_p1[15] == 1'b1) begin
        l_fu_721_p3 = 32'd15;
    end else if (sext_ln1198_fu_717_p1[16] == 1'b1) begin
        l_fu_721_p3 = 32'd16;
    end else if (sext_ln1198_fu_717_p1[17] == 1'b1) begin
        l_fu_721_p3 = 32'd17;
    end else if (sext_ln1198_fu_717_p1[18] == 1'b1) begin
        l_fu_721_p3 = 32'd18;
    end else if (sext_ln1198_fu_717_p1[19] == 1'b1) begin
        l_fu_721_p3 = 32'd19;
    end else if (sext_ln1198_fu_717_p1[20] == 1'b1) begin
        l_fu_721_p3 = 32'd20;
    end else if (sext_ln1198_fu_717_p1[21] == 1'b1) begin
        l_fu_721_p3 = 32'd21;
    end else if (sext_ln1198_fu_717_p1[22] == 1'b1) begin
        l_fu_721_p3 = 32'd22;
    end else if (sext_ln1198_fu_717_p1[23] == 1'b1) begin
        l_fu_721_p3 = 32'd23;
    end else if (sext_ln1198_fu_717_p1[24] == 1'b1) begin
        l_fu_721_p3 = 32'd24;
    end else if (sext_ln1198_fu_717_p1[25] == 1'b1) begin
        l_fu_721_p3 = 32'd25;
    end else if (sext_ln1198_fu_717_p1[26] == 1'b1) begin
        l_fu_721_p3 = 32'd26;
    end else if (sext_ln1198_fu_717_p1[27] == 1'b1) begin
        l_fu_721_p3 = 32'd27;
    end else if (sext_ln1198_fu_717_p1[28] == 1'b1) begin
        l_fu_721_p3 = 32'd28;
    end else if (sext_ln1198_fu_717_p1[29] == 1'b1) begin
        l_fu_721_p3 = 32'd29;
    end else if (sext_ln1198_fu_717_p1[30] == 1'b1) begin
        l_fu_721_p3 = 32'd30;
    end else if (sext_ln1198_fu_717_p1[31] == 1'b1) begin
        l_fu_721_p3 = 32'd31;
    end else begin
        l_fu_721_p3 = 32'd32;
    end
end

assign lsb_index_fu_739_p2 = ($signed(sub_ln1049_fu_729_p2) + $signed(32'd4294967243));

assign lshr_ln1052_fu_775_p2 = 16'd65535 >> zext_ln1052_fu_771_p1;

assign lshr_ln1063_fu_867_p2 = zext_ln1062_fu_847_p1 >> zext_ln1063_fu_863_p1;

assign m_2_fu_889_p3 = ((icmp_ln1063_fu_851_p2[0:0] == 1'b1) ? lshr_ln1063_fu_867_p2 : shl_ln1064_fu_883_p2);

assign m_3_fu_901_p2 = (m_2_fu_889_p3 + zext_ln1066_fu_897_p1);

assign m_axi_fm_ARBURST = 2'd0;

assign m_axi_fm_ARCACHE = 4'd0;

assign m_axi_fm_ARID = 1'd0;

assign m_axi_fm_ARLEN = 32'd1;

assign m_axi_fm_ARLOCK = 2'd0;

assign m_axi_fm_ARPROT = 3'd0;

assign m_axi_fm_ARQOS = 4'd0;

assign m_axi_fm_ARREGION = 4'd0;

assign m_axi_fm_ARSIZE = 3'd0;

assign m_axi_fm_ARUSER = 1'd0;

assign m_axi_fm_AWBURST = 2'd0;

assign m_axi_fm_AWCACHE = 4'd0;

assign m_axi_fm_AWID = 1'd0;

assign m_axi_fm_AWLEN = 32'd1;

assign m_axi_fm_AWLOCK = 2'd0;

assign m_axi_fm_AWPROT = 3'd0;

assign m_axi_fm_AWQOS = 4'd0;

assign m_axi_fm_AWREGION = 4'd0;

assign m_axi_fm_AWSIZE = 3'd0;

assign m_axi_fm_AWUSER = 1'd0;

assign m_axi_fm_WID = 1'd0;

assign m_axi_fm_WLAST = 1'b0;

assign m_axi_fm_WSTRB = 2'd3;

assign m_axi_fm_WUSER = 1'd0;

assign notlhs_fu_984_p2 = ((add_ln1076_fu_955_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs_fu_990_p2 = ((tmp_3_reg_1208 == 52'd0) ? 1'b1 : 1'b0);

assign or_ln1054_fu_833_p2 = (and_ln1054_fu_827_p2 | a_fu_793_p2);

assign or_ln139_fu_431_p2 = (icmp_ln139_reg_1095_pp0_iter1_reg | and_ln137_fu_419_p2);

assign or_ln_fu_839_p3 = {{1'd0}, {or_ln1054_fu_833_p2}};

assign p_Result_3_fu_819_p3 = tmp_V_2_fu_691_p3[add_ln1054_fu_813_p2];

assign p_Result_4_fu_781_p2 = (tmp_V_2_fu_691_p3 & lshr_ln1052_fu_775_p2);

assign p_Result_5_fu_917_p3 = m_3_fu_901_p2[32'd54];

assign p_Result_7_fu_677_p3 = p_Val2_s_fu_667_p2[32'd15];

assign p_Result_8_fu_709_p3 = {{1'd1}, {p_Result_s_fu_699_p4}};

assign p_Result_9_fu_967_p5 = {{tmp_2_fu_960_p3}, {zext_ln1067_fu_947_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_691_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_s_fu_699_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_699_p4[ap_tvar_int_0] = tmp_V_2_fu_691_p3[15 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_s_fu_667_p2 = (fm_addr_1_read_reg_1174 + fm_addr_read_reg_1169);

assign select_ln1048_fu_925_p3 = ((p_Result_5_fu_917_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln137_1_fu_557_p1 = grp_fu_1018_p2;

assign select_ln137_1_fu_557_p3 = ((icmp_ln139_reg_1095_pp0_iter1_reg[0:0] == 1'b1) ? select_ln137_1_fu_557_p1 : mul_ln813_reg_1124);

assign select_ln137_2_fu_310_p3 = ((icmp_ln139_fu_304_p2[0:0] == 1'b1) ? add_ln137_fu_298_p2 : k_fu_182);

assign select_ln137_3_fu_562_p3 = ((icmp_ln139_reg_1095_pp0_iter1_reg[0:0] == 1'b1) ? 14'd0 : shl_ln_fu_534_p3);

assign select_ln137_4_fu_394_p3 = ((icmp_ln139_reg_1095_pp0_iter1_reg[0:0] == 1'b1) ? 15'd0 : shl_ln1_fu_360_p3);

assign select_ln137_5_fu_401_p3 = ((icmp_ln139_reg_1095_pp0_iter1_reg[0:0] == 1'b1) ? 13'd0 : shl_ln813_1_fu_368_p3);

assign select_ln137_6_fu_569_p1 = grp_fu_1018_p2;

assign select_ln137_6_fu_569_p3 = ((icmp_ln139_reg_1095_pp0_iter1_reg[0:0] == 1'b1) ? select_ln137_6_fu_569_p1 : add_ln813_fu_552_p2);

assign select_ln137_fu_379_p3 = ((icmp_ln139_reg_1095_pp0_iter1_reg[0:0] == 1'b1) ? 7'd0 : i_fu_174);

assign select_ln139_1_fu_582_p3 = ((and_ln137_reg_1135[0:0] == 1'b1) ? shl_ln141_mid1_fu_575_p3 : select_ln137_3_fu_562_p3);

assign select_ln139_2_fu_452_p3 = ((and_ln137_fu_419_p2[0:0] == 1'b1) ? shl_ln813_mid1_fu_444_p3 : select_ln137_4_fu_394_p3);

assign select_ln139_3_fu_468_p3 = ((and_ln137_fu_419_p2[0:0] == 1'b1) ? shl_ln813_1_mid1_fu_460_p3 : select_ln137_5_fu_401_p3);

assign select_ln139_4_fu_610_p3 = ((and_ln137_reg_1135[0:0] == 1'b1) ? add_ln813_5_fu_604_p2 : select_ln137_6_fu_569_p3);

assign select_ln139_5_fu_621_p3 = ((and_ln137_reg_1135[0:0] == 1'b1) ? add_ln139_reg_1142 : select_ln137_reg_1130);

assign select_ln139_6_fu_340_p3 = ((icmp_ln139_reg_1095[0:0] == 1'b1) ? 15'd1 : add_ln139_1_fu_335_p2);

assign select_ln139_fu_436_p3 = ((or_ln139_fu_431_p2[0:0] == 1'b1) ? 8'd0 : j_fu_170);

assign sext_ln1198_fu_717_p1 = $signed(p_Result_8_fu_709_p3);

assign sext_ln137_cast_fu_250_p1 = $signed(sext_ln137);

assign sext_ln813_fu_524_p1 = $signed(trunc_ln7_fu_514_p4);

assign shl_ln1064_fu_883_p2 = zext_ln1062_fu_847_p1 << zext_ln1064_fu_879_p1;

assign shl_ln141_1_fu_541_p3 = {{i_1_reg_1118}, {5'd0}};

assign shl_ln141_1_mid1_fu_593_p3 = {{add_ln139_reg_1142}, {5'd0}};

assign shl_ln141_mid1_fu_575_p3 = {{add_ln139_reg_1142}, {7'd0}};

assign shl_ln1_fu_360_p3 = {{i_fu_174}, {8'd0}};

assign shl_ln813_1_fu_368_p3 = {{i_fu_174}, {6'd0}};

assign shl_ln813_1_mid1_fu_460_p3 = {{add_ln139_fu_425_p2}, {6'd0}};

assign shl_ln813_2_fu_480_p3 = {{select_ln139_fu_436_p3}, {1'd0}};

assign shl_ln813_mid1_fu_444_p3 = {{add_ln139_fu_425_p2}, {8'd0}};

assign shl_ln_fu_534_p3 = {{i_1_reg_1118}, {7'd0}};

assign sub_ln1049_fu_729_p2 = (32'd16 - l_fu_721_p3);

assign sub_ln1052_fu_765_p2 = (4'd6 - trunc_ln1052_fu_761_p1);

assign sub_ln1064_fu_873_p2 = (32'd54 - sub_ln1049_fu_729_p2);

assign sub_ln1070_fu_950_p2 = (11'd3 - trunc_ln1048_reg_1203);

assign tmp_2_fu_960_p3 = {{p_Result_7_reg_1188}, {add_ln1076_fu_955_p2}};

assign tmp_4_fu_799_p3 = lsb_index_fu_739_p2[32'd31];

assign tmp_V_2_fu_691_p3 = ((p_Result_7_fu_677_p3[0:0] == 1'b1) ? tmp_V_fu_685_p2 : p_Val2_s_fu_667_p2);

assign tmp_V_fu_685_p2 = (16'd0 - p_Val2_s_fu_667_p2);

assign tmp_fu_745_p4 = {{lsb_index_fu_739_p2[31:1]}};

assign trunc_ln1048_fu_933_p1 = l_fu_721_p3[10:0];

assign trunc_ln1049_fu_735_p1 = sub_ln1049_fu_729_p2[15:0];

assign trunc_ln1052_fu_761_p1 = sub_ln1049_fu_729_p2[3:0];

assign trunc_ln7_fu_514_p4 = {{add_ln813_2_fu_508_p2[63:1]}};

assign xor_ln1054_fu_807_p2 = (tmp_4_fu_799_p3 ^ 1'd1);

assign xor_ln137_fu_408_p2 = (icmp_ln139_reg_1095_pp0_iter1_reg ^ 1'd1);

assign zext_ln1052_fu_771_p1 = sub_ln1052_fu_765_p2;

assign zext_ln1062_fu_847_p1 = tmp_V_2_fu_691_p3;

assign zext_ln1063_fu_863_p1 = add_ln1063_fu_857_p2;

assign zext_ln1064_fu_879_p1 = sub_ln1064_fu_873_p2;

assign zext_ln1066_fu_897_p1 = or_ln_fu_839_p3;

assign zext_ln1067_fu_947_p1 = m_reg_1193;

assign zext_ln137_1_fu_386_p1 = grp_fu_1011_p2;

assign zext_ln139_fu_617_p1 = select_ln139_4_fu_610_p3;

assign zext_ln141_fu_589_p1 = select_ln139_1_fu_582_p3;

assign zext_ln813_1_fu_548_p1 = shl_ln141_1_fu_541_p3;

assign zext_ln813_2_fu_488_p1 = shl_ln813_2_fu_480_p3;

assign zext_ln813_3_fu_504_p1 = add_ln813_3_fu_498_p2;

assign zext_ln813_5_fu_600_p1 = shl_ln141_1_mid1_fu_593_p3;

assign zext_ln813_6_fu_476_p1 = select_ln139_3_fu_468_p3;

always @ (posedge ap_clk) begin
    select_ln1048_reg_1198[10:1] <= 10'b0111111111;
end

endmodule //layer_top_layer3_Pipeline_VITIS_LOOP_137_1_VITIS_LOOP_139_2_VITIS_LOOP_141_3
